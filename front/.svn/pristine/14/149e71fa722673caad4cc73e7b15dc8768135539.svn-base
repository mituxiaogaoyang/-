<template>
  <div class="content-box">
    <div class="toolbar">
			<Button type="primary" @click="add">新增</Button>
			<Button type="primary" @click="leadIn">导入</Button>
			<Button type="primary" @click="leadOut">导出</Button>
			<div class="rightBar">
				<Input search placeholder="Enter something..." @search="search"/>
			</div>
    </div>
    <ori-table :columns= "columns" :dataSource="dataSource" :loading="loading" :adaptCount="adaptCount"
      :currentPage="currentPage" :totalPage="totalPage" :getData="getData"></ori-table>
  </div>
</template>
<script>
import * as api from '@/api/hideDangerPoint';
import OriTable from '@/components/OriTable';
import { formatLevel } from '@/common/format';
export default {
  components: {
    OriTable
  },
  data(){
    return {
      columns: [
				{
					title:'隐患点名称',
					key:'name',
					width:200
				},
				{
					title:'类型',
					key:'type',
					minWidth:90
				},
				{
					title:'地理位置',
					key:'position',
					minWidth:250
				},
				{
					title:'威胁对象',
					key:'object',
					width:200
				},
        {
          title: '操作',
          key: 'operate',
          minWidth: 220,
          render: (h, param) => {
            return h('div',[
							h('Button', {
							  props: {
							    size: 'small',
									type:'text'
							  },
							  on: {
							    click: () => {
							      this.modify(param.row);
							    }
							  }
							}, '详情'),
							h('Button', {
							  props: {
							    size: 'small',
									type:'text'
							  },
							  on: {
							    click: () => {
							      this.resetPwd(param.row.id);
							    }
							  }
							}, '定位'),
							h('Button', {
							  props: {
							    size: 'small',
									type:'text'
							  },
							  on: {
							    click: () => {
							      this.resetPwd(param.row.id);
							    }
							  }
							}, '编辑'),
							h('Button', {
							  props: {
							    size: 'small',
									type:'text'
							  },
							  on: {
							    click: () => {
							      this.resetPwd(param.row.id);
							    }
							  }
							}, '删除'),
						]);
          }
        }
      ],
      dataSource: [],
      loading: true,
      adaptCount: 0,
      currentPage: 1,
      totalPage: 1,
      pageSize: 10
    };
  },
  created(){
    this.getData();
  },
  mounted(){
  },
  destroyed(){
  },
  methods: {
    getData(pageNum){
      this.loading = true
      api.getData({pageNum: pageNum || 1, pageSize: this.pageSize})
      .then(result => {
          this.dataSource = result.dataList;
          this.currentPage = result.pageNum;
          this.totalPage = result.totalNum;
          this.loading = false;
          this.adaptCount++;
      });
    },
		add(){
			
		},
		leadIn(){
			
		},
		leadOut(){
			
		},
		search(){}
  }
}
</script>
<style scoped lang="less">
</style>