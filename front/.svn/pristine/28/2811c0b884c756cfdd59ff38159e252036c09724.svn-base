<template>
  <div class="big-screen">
    <div class="head">
      <div class="title">
        <span>凉山州</span>
        <span>地质灾害监测预警系统</span>
      </div>
      <div class="head-con">
        <Input search @on-search="search"></Input>
        <div class="weather">天气</div>
        <div class="userInfo">
          <span>头像</span>
          <span>admin</span>
        </div>
        <a class="goCtrlCenter" href="/#/">控制中心</a>
      </div>
    </div>
    <div id="map-container"></div>
    <div class="left-con">
      <Icon type="md-rewind" :class="leftConVisible ? 'left' : 'right'" @click="leftConVisible=!leftConVisible" />
      <div :class="leftConVisible ? 'opened' : 'closed'">
        <div class="deviceStatus">
          <div class="slider">
            <div class="item">
              <div class="title">
                <span>设备运行状态统计</span>
              </div>
              <device-chart></device-chart>
            </div>
          </div>
        </div>
        <div class="shift">
          <div class="slider" :data-num="shiftChartArr.length" :style="{width:shiftChartArr.length*17.7+'rem'}">
            <div class="item" v-for="(item, index) in shiftChartArr" :key="index">
              <div class="title">
                <span>{{item.name}}</span>
                <Icon type="ios-arrow-forward" />
                <Icon type="ios-arrow-forward" />
              </div>
              <shift-chart></shift-chart>
            </div>
          </div>
        </div>
        <div class="gnss">
          <div class="slider" :data-num="gnssChartArr.length" :style="{width:gnssChartArr.length*17.7+'rem'}">
            <div class="item" v-for="(item, index) in gnssChartArr" :key="index">
              <div class="title">
                <span>{{item.name}}</span>
                <Icon type="ios-arrow-forward" />
                <Icon type="ios-arrow-forward" />
              </div>
              <gnss-chart></gnss-chart>
            </div>
          </div>
        </div>
        <div class="rainfall">
          <div class="slider" :data-num="rainfallChartArr.length" :style="{width:rainfallChartArr.length*17.7+'rem'}">
            <div class="item" v-for="(item, index) in rainfallChartArr" :key="index">
              <div class="title">
                <span>{{item.name}}</span>
                <Icon type="ios-arrow-forward" />
                <Icon type="ios-arrow-forward" />
              </div>
              <rainfall-chart></rainfall-chart>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="right-top-con">
      <Icon type="md-rewind" :class="rightConVisible ? 'right' : 'left'" @click="rightConVisible=!rightConVisible" />
      <div :class="rightConVisible ? 'opened' : 'closed'">
        <div class="warning-monitor">
          <div class="title">预警监控</div>
          <div class="item level1-color">
            <div class="label">轻微预警</div>
            <div class="num">{{warningMonitor.num1}}</div>
          </div>
          <div class="item level2-color">
            <div class="label">中度预警</div>
            <div class="num">{{warningMonitor.num2}}</div>
          </div>
          <div class="item level3-color">
            <div class="label">严重预警</div>
            <div class="num">{{warningMonitor.num3}}</div>
          </div>
        </div>
        <div class="msg-notice">
          <div class="title">
            <span>消息通知</span>
            <Icon type="ios-arrow-forward" />
            <Icon type="ios-arrow-forward" />
          </div>
          <roll-msg :dataSource="msgNotice"></roll-msg>
        </div>
      </div>
    </div>
    <div class="right-bottom-con">
      <div class="layer-ctrl">
        <Icon type="logo-buffer" title="图层" />
        <div class="layer-box">
          <div class="layer-con">
            <div class="item bottom">
              <Checkbox label="隐患点">隐患点</Checkbox>
            </div>
            <div class="item bottom left">
              <Checkbox label="监测点">监测点</Checkbox>
            </div>
            <div class="item">
              <Checkbox label="地图标注">地图标注</Checkbox>
            </div>
            <div class="item left">
              <Checkbox label="区域边界">区域边界</Checkbox>
            </div>
          </div>
        </div>
      </div>
      <div class="go-home" id="goHomeBtn">
        <Icon type="md-locate" title="回到初始化位置" />
      </div>
      <div class="measure" id="measureBtn" title="测距离"></div>
      <div class="polygon" id="polygonBtn" title="测面积"></div>
    </div>
    <div class="fenceInfoWindow">
      <div class="infoWindow-con">
        <div class="infoWindow-head">
          <span>标注</span>
          <Icon type="ios-close" @click="closeOverlay('fenceInfo')"></Icon>
        </div>
        <div class="infoWindow-body">
          <div>
            <span class="_title">网络设备：</span>
            <div class="_content" v-text="(selectedFence.netNum || 0) + '台'"></div>
          </div>
          <div>
            <span class="_title">备注：</span>
            <div class="_content" v-text="selectedFence.remarks || '无'"></div>
          </div>
        </div>
      </div>
      <div class="infoWindow-bottom"></div>
    </div>
    <div class="geoPointInfoWindow">
      <div class="infoWindow-con">
        <div class="infoWindow-head">
          <span>隐患点</span>
          <Icon type="ios-close" @click="closeOverlay('geoPointInfo')"></Icon>
        </div>
        <div class="infoWindow-body">
          <div>
            <span class="_title">网络设备：</span>
            <div class="_content" v-text="(selectedGeoPoint.netNum || 0) + '台'"></div>
          </div>
          <div>
            <span class="_title">备注：</span>
            <div class="_content" v-text="selectedGeoPoint.remarks || '无'"></div>
          </div>
        </div>
      </div>
      <div class="infoWindow-bottom"></div>
    </div>
  </div>
</template>
<script>
import './index.less';
import DeviceChart from '@/components/deviceChart';
import ShiftChart from '@/components/shiftChart';
import GnssChart from '@/components/gnssChart';
import RainfallChart from '@/components/rainfallChart';
import RollMsg from './RollMsg';
import initOther from './initOther';
import MapTool from '@/lib/ol/mapTool';
import { adaptFontSize } from '@/common/other';
export default {
  components: {
    DeviceChart,
    ShiftChart,
    GnssChart,
    RainfallChart,
    RollMsg
  },
  data(){
    return {
      leftConVisible: true,
      shiftChartArr: [
        {
          id: 1,
          name: '拉线位移器监测11'
        },
        {
          id: 2,
          name: '拉线位移器监测22'
        },
        {
          id: 3,
          name: '拉线位移器监测33'
        }
      ],
      gnssChartArr: [
        {
          id: 1,
          name: 'GNSS表面位移监测11'
        },
        {
          id: 2,
          name: 'GNSS表面位移监测22'
        }
      ],
      rainfallChartArr: [
        {
          id: 1,
          name: '降雨量实时监测'
        }
      ],
      rightConVisible: true,
      warningMonitor: {
        num1: 0,
        num2: 0,
        num3: 0
      },
      msgNotice: [
        {id:1,level:0,content:'正常'},
        {id:2,level:1,content:'轻度预警'},
        {id:3,level:2,content:'中度预警'},
        {id:4,level:3,content:'严重预警'}
      ],
      selectedGeoPoint: {},
      selectedFence: {}
    };
  },
  beforeCreate(){
    adaptFontSize();
    window.addEventListener('resize', adaptFontSize);
    // const isLogin = sessionStorage.token && sessionStorage.refreshToken && sessionStorage.userId;
    // if (!isLogin) {
    //   window.location.href = window.location.protocol + '//' + window.location.host + '/login';
    // }
  },
  created(){
    this.mapTool = new MapTool({
      mousePosition: false,
      measure: true,
      polygon: true,
      showFenceArea: true
    });
    this.ol = this.mapTool.ol;
  },
  mounted(){
    // 重写mapTool.addControl
    this.mapTool.addControl = ({className, onclick}) => {
      const btn = document.getElementById(className + 'Btn');
      btn.addEventListener('click', onclick.bind(this.mapTool), false);
    }
    // 初始化地图
    this.mapTool.init(document.getElementById('map-container'), 'googleSatellite');
    initOther(this.mapTool);
    this.bindInfoWindow();

    this.startupSlider();

    // this.mapTool.loadGeos([{
    //   id: 1,
    //   lng: 102,
    //   lat: 28
    // }]);
    // this.mapTool.addFence({
    //   posCoordinateSystem: 0,
    //   enabled: true,
    //   fencePointData: '100,26;104,26;104,29;100,29;100,26'
    // });
  },
  destroyed(){},
  methods: {
    search(value){
      const result = Object.keys(this.mapTool.geoPoints).find(id => {
        const geoPoint = this.mapTool.geoPoints[id];
        if(geoPoint && geoPoint.data.projectName === value){
          this.mapTool.fitToCoords([geoPoint.getCoordinate()]);
          this.showTipOverlay(geoPoint);
          return true;
        }
      });
      !result && this.$Message.info('该项目不存在');
    },
    closeOverlay(target){
      this.mapTool.hideInfoWindow(target);
    },
    bindInfoWindow(){
      this.mapTool.bindInfoWindow({
        geoPoint: {
          infoWindows: [
            {
              type: 'Info',
              element: this.$el.eChildren('.geoPointInfoWindow')[0]
            }
          ],
          selectedCallback: (geoPoint) => {
            console.log(geoPoint);
          }
        },
        fence: {
          infoWindows: [
            {
              type: 'Info',
              element: this.$el.eChildren('.fenceInfoWindow')[0]
            }
          ],
          selectedCallback: (fence) => {
            console.log(fence);
          }
        }
      });
    },
    startupSlider(){
      const sliders = this.$el.querySelector('.left-con').querySelectorAll('.slider');
      function step(dom, i, num){
        setTimeout(() => {
          dom.style.transform = `translate3d(${i * -17.7}rem, 0, 0)`;
          dom.style.transition = 'transform 1s ease 0s';
          if(i + 1 == num){
            i = 0;
          }else{
            i++;
          }
          step(dom, i, num);
        }, 6 * 1000);
      }
      sliders.forEach(slider => {
        const num = slider.getAttribute('data-num');
        num > 1 && step(slider, 1, num);
      });
    }
  }
}
</script>
<style lang="less">
html{
  overflow: hidden;
}
.big-screen{
  .level0-color{
    color: #00FB5A;
  }
  .level1-color{
    color: #E0E31A;
  }
  .level2-color{
    color: #E19A00;
  }
  .level3-color{
    color: #FF0006;
  }
  .left-con, .right-top-con{
    .ivu-icon-md-rewind{
      position: absolute;
      top: -2.4rem;
      width: 1.6rem;
      height: 1rem;
      background-color: rgba(255, 255, 255, 0.1);
      text-align: center;
      line-height: 1rem;
      font-size: 0.9rem;
      cursor: pointer;
    }
    .ivu-icon-md-rewind.left{
    }
    .ivu-icon-md-rewind.right{
      transform: rotate(180deg);
    }
  }
  .head{
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    z-index: 999999;
    height: 3.5rem;
    color: #fff;
    .title{
      float: left;
      width: 14.3rem;
    }
    .head-con{
      height: 3.5rem;
      line-height: 3.5rem;
      text-align: right;
      margin-left: 15.8rem;
      margin-right: 1rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.2);
      &>*{
        display: inline-block;
      }
      .ivu-input-wrapper{
        width: 14rem;
        opacity: 0.14;
        margin-right: 1.3rem;
        .ivu-input-icon{
          width: 1.8rem;
          height: 1.8rem;
          line-height: 1.8rem;
        }
        .ivu-input{
          height: 1.8rem;
          border-radius: 0.9rem;
        }
      }
      .goCtrlCenter{
        margin-right: 1.15rem;
      }
    }
  }
  .left-con{
    position: absolute;
    left: 1rem;
    top: 50%;
    z-index: 999999;
    margin-top: -20.6rem;
    .ivu-icon-md-rewind{
      left: -1rem;
    }
    >div{
      position: absolute;
      left: 0;
      top: 0;
      width: 18.3rem;
      height: 41.2rem;
      &.closed{
        left: -20rem;
        transition: left 1s ease 0s;
      }
      &.opened{
        left: 0;
        transition: left 1s ease 0s;
      }
      >div{
        height: 10rem;
        padding: 0.3rem;
        margin-top: 0.4rem;
        border-radius: 0.3rem;
        background-color: rgba(2, 17, 17, 0.5);
        overflow: hidden;
        .slider{
          &.started{
            transform: translate3d(-17.7rem, 0, 0);
            transition: transform 1s ease 5s;
          }
          .item{
            float: left;
            width: 17.7rem;
            height: 9.4rem;
            padding-top: 1.8rem;
            position: relative;
            .title{
              position: absolute;
              left: 0.5rem;
              top: 0.5rem;
              font-size: 0.8rem;
              color: #0ff;
              >:last-child.ivu-icon{
                margin-left: -9px;
              }
            }
            .chart{
              width: 100%;
              height: 7.6rem;
            }
          }
        }
      }
    }
    .deviceStatus{
      margin-top: 0;
    }
  }
  .right-top-con{
    position: absolute;
    right: 0.7rem;
    top: 6.6rem;
    z-index: 999999;
    >div{
      position: absolute;
      right: 0;
      top: 0;
      width: 18.3rem;
      height: 21.4rem;
      &.opened{
        right: 0;
        transition: right 1s ease 0s;
      }
      &.closed{
        right: -20rem;
        transition: right 1s ease 0s;
      }
    }
    .ivu-icon-md-rewind{
      right: -0.7rem;
    }
    .title{
      font-size: 0.8rem;
      color: #0ff;
      margin-bottom: 0.25rem;
    }
    .warning-monitor{
      height: 6.3rem;
      padding: 0.7rem 0.8rem;
      border-radius: 0.3rem;
      background-color: rgba(2, 17, 17, 0.5);
      .item{
        float: left;
        width: 33.3%;
        padding-left: 0.3rem;
        .label{
          line-height: 1.5rem;
          font-size: 0.7rem;
        }
        .num{
          line-height: 2.2rem;
          font-size: 2rem;
        }
      }
    }
    .msg-notice{
      height: 14.7rem;
      padding: 0.7rem 0.8rem;
      margin-top: 0.4rem;
      border-radius: 0.3rem;
      background-color: rgba(2, 17, 17, 0.5);
      .title>.ivu-icon:last-child{
        margin-left: -9px;
      }
    }
  }
  .right-bottom-con{
    position: absolute;
    right: 2rem;
    bottom: 2.5rem;
    width: 1.3rem;
    height: 6.3rem;
    z-index: 999999;
    &>div{
      display: inline-block;
      width: 1.3rem;
      height: 1.3rem;
      line-height: 1.3rem;
      background-color: rgba(255, 255, 255, 0.1);
      vertical-align: bottom;
      margin-top: 0.35rem;
      text-align: center;
      &>.ivu-icon{
        font-size: 0.8rem;
        color: #8D9798;
        cursor: pointer;
      }
      &.layer-ctrl{
        margin-top: 0;
        &:hover{
          .layer-box{
            display: block;
          }
        }
        &>span{
          cursor: pointer;
        }
        .layer-box{
          display: none;
          position: absolute;
          right: 1.3rem;
          top: 0;
          width: 10.6rem;
          text-align: left;
          .layer-con{
            width: 10rem;
            height: 2.6rem;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 0.15rem;
            padding: 0.2rem 0.6rem;
            position: relative;
            .item{
              float: left;
              width: 50%;
              color: rgba(255, 255, 255, 0.5);
              line-height: 1.1rem;
              .ivu-checkbox-inner{
                width: 0.7rem;
                height: 0.7rem;
              }
              .ivu-checkbox-inner:after{
                width: 0.2rem;
                height: 0.4rem;
              }
              .ivu-checkbox-wrapper{
                margin-right: 0;
              }
              &.left{
                border-left: 1px solid rgba(255, 255, 255, 0.1);
                padding-left: 0.4rem;
              }
              &.bottom{
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
              }
            }
            &:after{
              position: absolute;
              right: -10px;
              top: 3px;
              content: '';
              border: 5px solid transparent;
              border-top-color: rgba(255, 255, 255, 0.1);
              transform: rotate(-90deg);
            }
          }
        }
      }
    }
  }
}
#map-container{
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #021e21;
  .tooltip{
    background-color: #fff;
    padding: 15px 40px;
    border-radius: 46px;
    line-height: 16px;
    position: relative;
    i{
      position: absolute;
      left: 50%;
      bottom: 0;
      &:after{
        content: ' ';
        position: absolute;
        left: -10px;
        bottom: -20px;
        border: 10px solid transparent;
        border-top-color: #fff;
      }
    }
  }
  .fenceInfoWindow,
  .geoPointInfoWindow,
  .markerInfoWindow {
    position: absolute;
    z-index: 1;
    width: 320px;
    font-size: 12px;
    color: #333;
    .infoWindow-con {
      background-color: #fff;
      border-radius: 4px;
      overflow: hidden;
      .infoWindow-head {
        height: 36px;
        line-height: 36px;
        padding: 0 8px 0 16px;
        background-color: #f3f7f9;
        text-align: right;
        span {
          display: inline-block;
          vertical-align: top;
          &._btn {
            margin-left: 12px;
            text-decoration: underline;
            cursor: pointer;
            &.updateStateBtn {
              color: #27a1ff;
              position: relative;
              >ul {
                display: none;
                position: absolute;
                left: -11px;
                top: 35px;
                margin: 0;
                width: 70px;
                padding: 0;
                color: #333;
                box-shadow: 0 0 8px 0 #eee;
                li {
                  padding: 0 10px;
                  list-style-type: none;
                  line-height: 28px;
                  &:hover {
                    background-color: #e9e9e9;
                  }
                  &.actived {
                    color: #27a1ff;
                  }
                }
              }
              &:hover {
                >ul {
                  display: block;
                  color: #454a51;
                }
              }
            }
          }
          &:first-child {
            float: left;
            font-size: 14px;
            font-weight: bold;
          }
          &:last-child {
            cursor: pointer;
            margin-left: 16px;
            font-size: 24px;
          }
        }
      }
      .infoWindow-body {
        padding: 16px;
        >div {
          min-height: 13px;
          margin-top: 10px;
          &:first-child {
            margin-top: 0;
          }
          >span._title {
            float: left;
          }
          >div._content {
            margin-left: 40px;
            color: #383d43;
            word-wrap: break-word;
          }
          >span {
            color: #383d43;
            &:first-child {
              color: #666;
            }
          }
        }
      }
      .infoWindow-btns {
        padding: 0 16px 16px 16px;
        span {
          color: #27a1ff;
          margin-right: 16px;
          cursor: pointer;
        }
      }
      &:after {
        position: absolute;
        bottom: 26px;
        left: 1px;
        right: 1px;
        height: 15px;
        content: '';
        background-color: #fff;
        z-index: 2;
      }
    }
    .infoWindow-bottom {
      height: 25px;
      background-color: transparent;
      position: relative;
      &:before,
      &:after {
        position: absolute;
        left: 129px;
        bottom: 10px;
        content: '';
        border-width: 30px;
        border-style: solid;
        border-color: transparent;
        border-bottom-color: #e6ebf2;
        transform: rotate(-25deg);
      }
      &:after {
        border-bottom-color: #fff;
        left: 130px;
        bottom: 11px;
      }
    }
  }
}
</style>