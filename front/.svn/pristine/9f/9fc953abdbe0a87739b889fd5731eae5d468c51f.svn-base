<template>
  <div class="content-box">
    <div class="toolbar">
		<Button type="primary" @click="add">新增</Button>
		 <Button type="warning">手动预警发布</Button>
		<div class="rightBar">
			<Input search  @search="search"/>
		</div>
    </div>
    <ori-table :columns= "columns" :dataSource="dataSource" :loading="loading" :adaptCount="adaptCount"
      :currentPage="currentPage" :totalPage="totalPage" :getData="getData"></ori-table>
  </div>
</template>
<script>
import * as api from '@/api/earlyWarning';
import OriTable from '@/components/OriTable';
export default {
  components: {
    OriTable
  },
  data(){
    return {
      columns: [
        {
          title: '序号',
          type: 'index',
          width: 70
        },
		{
			title:'预警名称',
			key:'name',
			minWidth:120
		},
		{
			title:'关联隐患点',
			key:'pointHide',
			minWidth:120
		},
		{
			title:'关联监测点',
			key:'pointMonitor',
			minWidth:100
		},
		{
			title:'检测类型',
			key:'type',
			minWidth:100
		},
		{
			title:'预警等级',
			key:'degree',
			minWidth:100
		},
		{
			title:'预警条件',
			key:'condition',
			minWidth:120
		},
		{
			title:'通知号码',
			key:'phone',
			minWidth:110
		},
		{
			title:'状态',
			key:'state',
			minWidth:90
		},
		{
		  title: '操作',
		  key: 'operate',
		  minWidth: 210,
		  render: (h, param) => {
		    return h('div',[
					h('Button', {
					  props: {
					    size: 'small',
							type:'text'
					  },
					  on: {
					    click: () => {
					      this.modify(param.row);
					    }
					  }
					}, '详情'),
					h('Button', {
					  props: {
					    size: 'small',
							type:'text'
					  },
					  on: {
					    click: () => {
					      this.resetPwd(param.row.id);
					    }
					  }
					}, '定位'),
					h('Button', {
					  props: {
					    size: 'small',
							type:'text'
					  },
					  on: {
					    click: () => {
								console.log(param.row)
								this.methodDeal = '编辑',
								this.form = ''
					      this.$store.commit('modal/openEdit');
					    }
					  }
					}, '编辑'),
					h('Button', {
					  props: {
					    size: 'small',
							type:'text'
					  },
					  on: {
					    click: () => {
								this.$Modal.confirm({
										title: '',
										content: '<p>确认删除该隐患点？</p>',
										center:true,
										onOk: () => {
												this.deletePoint(param.row.id);
										}
								});
					      
					    }
					  }
					}, '删除'),
				]);
		  }
		}
      ],
      dataSource: [],
      loading: true,
      adaptCount: 0,
      currentPage: 1,
      totalPage: 1,
      pageSize: 10,
			
    };
  },
  created(){
    this.getData();
  },
  mounted(){
  },
  destroyed(){
  },
  methods: {
    getData(pageNum){
      this.loading = true
      api.getData({pageNum: pageNum || 1, pageSize: this.pageSize})
      .then(result => {
          this.dataSource = result.dataList;
          this.currentPage = result.pageNum;
          this.totalPage = result.totalNum;
          this.loading = false;
          this.adaptCount++;
      });
    },
	search(){
		
	},
	add(){
		
	}
  }
}
</script>
<style scoped lang="less">
	.select_list{
		display: inline-block
	}
</style>