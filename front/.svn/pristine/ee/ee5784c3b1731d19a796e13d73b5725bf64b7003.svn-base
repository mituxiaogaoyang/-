<template>
  <div class="big-screen">
    <div id="map-container"></div>
    <div class="fenceInfoWindow">
      <div class="infoWindow-con">
        <div class="infoWindow-head">
          <span>标注</span>
          <Icon type="ios-close" @click="closeOverlay('fenceInfo')"></Icon>
        </div>
        <div class="infoWindow-body">
          <div>
            <span class="_title">网络设备：</span>
            <div class="_content" v-text="(selectedFence.netNum || 0) + '台'"></div>
          </div>
          <div>
            <span class="_title">备注：</span>
            <div class="_content" v-text="selectedFence.remarks || '无'"></div>
          </div>
        </div>
      </div>
      <div class="infoWindow-bottom"></div>
    </div>
    <div class="geoPointInfoWindow">
      <div class="infoWindow-con">
        <div class="infoWindow-head">
          <span>隐患点</span>
          <Icon type="ios-close" @click="closeOverlay('geoPointInfo')"></Icon>
        </div>
        <div class="infoWindow-body">
          <div>
            <span class="_title">网络设备：</span>
            <div class="_content" v-text="(selectedGeoPoint.netNum || 0) + '台'"></div>
          </div>
          <div>
            <span class="_title">备注：</span>
            <div class="_content" v-text="selectedGeoPoint.remarks || '无'"></div>
          </div>
        </div>
      </div>
      <div class="infoWindow-bottom"></div>
    </div>
  </div>
</template>
<script>
import './index.less';
import initBoundary from './boundary';
import MapTool from '@/lib/ol/mapTool';
export default {
  data(){
    return {
      selectedGeoPoint: {},
      selectedFence: {}
    };
  },
  created(){
    this.mapTool = new MapTool();
    this.ol = this.mapTool.ol;
  },
  mounted(){
    this.mapTool.init(document.getElementById('map-container'), 'googleSatellite');
    initBoundary(this.mapTool);
    this.bindInfoWindow();

    this.mapTool.loadGeos([{
      id: 1,
      lng: 102,
      lat: 28
    }]);
    this.mapTool.addFence({
      posCoordinateSystem: 0,
      enabled: true,
      fencePointData: '100,26;104,26;104,29;100,29;100,26'
    });
  },
  destroyed(){},
  methods: {
    search(value){
      const result = Object.keys(this.mapTool.geoPoints).find(id => {
        const geoPoint = this.mapTool.geoPoints[id];
        if(geoPoint && geoPoint.data.projectName === value){
          this.mapTool.fitToCoords([geoPoint.getCoordinate()]);
          this.showTipOverlay(geoPoint);
          return true;
        }
      });
      !result && this.$Message.info('该项目不存在');
    },
    closeOverlay(target){
      this.mapTool.hideInfoWindow(target);
    },
    bindInfoWindow(){
      this.mapTool.bindInfoWindow({
        geoPoint: {
          infoWindows: [
            {
              type: 'Info',
              element: this.$el.eChildren('.geoPointInfoWindow')[0]
            }
          ],
          selectedCallback: (geoPoint) => {
            console.log(geoPoint);
          }
        },
        fence: {
          infoWindows: [
            {
              type: 'Info',
              element: this.$el.eChildren('.fenceInfoWindow')[0]
            }
          ],
          selectedCallback: (fence) => {
            console.log(fence);
          }
        }
      });
    }
  }
}
</script>
<style lang="less">
#map-container{
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  .tooltip{
    background-color: #fff;
    padding: 15px 40px;
    border-radius: 46px;
    line-height: 16px;
    position: relative;
    i{
      position: absolute;
      left: 50%;
      bottom: 0;
      &:after{
        content: ' ';
        position: absolute;
        left: -10px;
        bottom: -20px;
        border: 10px solid transparent;
        border-top-color: #fff;
      }
    }
  }
  .fenceInfoWindow,
  .geoPointInfoWindow,
  .markerInfoWindow {
    position: absolute;
    z-index: 1;
    width: 320px;
    font-size: 12px;
    color: #333;
    .infoWindow-con {
      background-color: #fff;
      border-radius: 4px;
      overflow: hidden;
      .infoWindow-head {
        height: 36px;
        line-height: 36px;
        padding: 0 8px 0 16px;
        background-color: #f3f7f9;
        text-align: right;
        span {
          display: inline-block;
          vertical-align: top;
          &._btn {
            margin-left: 12px;
            text-decoration: underline;
            cursor: pointer;
            &.updateStateBtn {
              color: #27a1ff;
              position: relative;
              >ul {
                display: none;
                position: absolute;
                left: -11px;
                top: 35px;
                margin: 0;
                width: 70px;
                padding: 0;
                color: #333;
                box-shadow: 0 0 8px 0 #eee;
                li {
                  padding: 0 10px;
                  list-style-type: none;
                  line-height: 28px;
                  &:hover {
                    background-color: #e9e9e9;
                  }
                  &.actived {
                    color: #27a1ff;
                  }
                }
              }
              &:hover {
                >ul {
                  display: block;
                  color: #454a51;
                }
              }
            }
          }
          &:first-child {
            float: left;
            font-size: 14px;
            font-weight: bold;
          }
          &:last-child {
            cursor: pointer;
            margin-left: 16px;
            font-size: 24px;
          }
        }
      }
      .infoWindow-body {
        padding: 16px;
        >div {
          min-height: 13px;
          margin-top: 10px;
          &:first-child {
            margin-top: 0;
          }
          >span._title {
            float: left;
          }
          >div._content {
            margin-left: 40px;
            color: #383d43;
            word-wrap: break-word;
          }
          >span {
            color: #383d43;
            &:first-child {
              color: #666;
            }
          }
        }
      }
      .infoWindow-btns {
        padding: 0 16px 16px 16px;
        span {
          color: #27a1ff;
          margin-right: 16px;
          cursor: pointer;
        }
      }
      // .infoWindow-submit {
      //   height: 48px;
      //   padding-right: 16px;
      //   text-align: right;
      //   button {
      //     position: relative;
      //     z-index: 3;
      //     margin-top: 10px;
      //   }
      // }
      &:after {
        position: absolute;
        bottom: 26px;
        left: 1px;
        right: 1px;
        height: 15px;
        content: '';
        background-color: #fff;
        z-index: 2;
      }
    }
    .infoWindow-bottom {
      height: 25px;
      background-color: transparent;
      position: relative;
      &:before,
      &:after {
        position: absolute;
        left: 129px;
        bottom: 10px;
        content: '';
        border-width: 30px;
        border-style: solid;
        border-color: transparent;
        border-bottom-color: #e6ebf2;
        transform: rotate(-25deg);
      }
      &:after {
        border-bottom-color: #fff;
        left: 130px;
        bottom: 11px;
      }
    }
  }
  // .mapSign{
  //   position: absolute;
  //   right: 13px;
  //   bottom: 1px;
  //   color: #969fb4;
  //   z-index: 1;
  // }
}
</style>